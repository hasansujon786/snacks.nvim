*snacks-image.txt*                                                 snacks.nvim

==============================================================================
Table of Contents                             *snacks-image-table-of-contents*

1. Setup                                                  |snacks-image-setup|
2. Config                                                |snacks-image-config|
3. Types                                                  |snacks-image-types|
4. Module                                                |snacks-image-module|
  - Snacks.image.dim()                |snacks-image-module-snacks.image.dim()|
  - Snacks.image.new()                |snacks-image-module-snacks.image.new()|
  - Snacks.image.supports()      |snacks-image-module-snacks.image.supports()|
  - Snacks.image.supports_file()|snacks-image-module-snacks.image.supports_file()|
  - Snacks.image.supports_terminal()|snacks-image-module-snacks.image.supports_terminal()|
  - image:close()                          |snacks-image-module-image:close()|
  - image:convert()                      |snacks-image-module-image:convert()|
  - image:create()                        |snacks-image-module-image:create()|
  - image:grid_size()                  |snacks-image-module-image:grid_size()|
  - image:hide()                            |snacks-image-module-image:hide()|
  - image:ready()                          |snacks-image-module-image:ready()|
  - image:render()                        |snacks-image-module-image:render()|
  - image:request()                      |snacks-image-module-image:request()|
  - image:update()                        |snacks-image-module-image:update()|
  - image:wins()                            |snacks-image-module-image:wins()|
5. Links                                                  |snacks-image-links|
Image viewer using the Kitty Graphics Protocol
<https://sw.kovidgoyal.net/kitty/graphics-protocol/>.

Supported terminals:

- kitty <https://sw.kovidgoyal.net/kitty/>
- wezterm <https://wezfurlong.org/wezterm/>
- ghostty <https://ghostty.org/>

In order to automatically display the image when openinng an image file, you
need to enable the `image` plugin in your `snacks` config.

Supported image formats:

- PNG
- JPEG/JPG
- GIF
- BMP
- WEBP

ImageMagick <https://imagemagick.org/index.php> is required to convert images
to the supported formats (all except PNG).


==============================================================================
1. Setup                                                  *snacks-image-setup*

>lua
    -- lazy.nvim
    {
      "folke/snacks.nvim",
      ---@type snacks.Config
      opts = {
        image = {
          -- your image configuration comes here
          -- or leave it empty to use the default settings
          -- refer to the configuration section below
        }
      }
    }
<


==============================================================================
2. Config                                                *snacks-image-config*

>lua
    ---@class snacks.image.Config
    ---@field file? string
    ---@field wo? vim.wo|{} options for windows showing the image
    {
      force = false, -- try displaying the image, even if the terminal does not support it
      wo = {
        wrap = false,
        number = false,
        relativenumber = false,
        cursorcolumn = false,
        signcolumn = "no",
        foldcolumn = "0",
        list = false,
        spell = false,
        statuscolumn = "",
      },
    }
<


==============================================================================
3. Types                                                  *snacks-image-types*

>lua
    ---@alias snacks.image.Dim {col: number, row: number, width: number, height: number}
<


==============================================================================
4. Module                                                *snacks-image-module*

>lua
    ---@class snacks.image
    ---@field id number
    ---@field buf number
    ---@field opts snacks.image.Config
    ---@field file string
    ---@field augroup number
    ---@field _convert uv.uv_process_t?
    Snacks.image = {}
<


`Snacks.image.dim()`                                      *Snacks.image.dim()*

Get the dimensions of a PNG file

>lua
    ---@param file string
    ---@return number width, number height
    Snacks.image.dim(file)
<


`Snacks.image.new()`                                      *Snacks.image.new()*

>lua
    ---@param buf number
    ---@param opts? snacks.image.Config
    Snacks.image.new(buf, opts)
<


`Snacks.image.supports()`                            *Snacks.image.supports()*

Check if the file format is supported and the terminal supports the kitty
graphics protocol

>lua
    ---@param file string
    Snacks.image.supports(file)
<


`Snacks.image.supports_file()`                  *Snacks.image.supports_file()*

Check if the file format is supported

>lua
    ---@param file string
    Snacks.image.supports_file(file)
<


`Snacks.image.supports_terminal()`                  *Snacks.image.supports_terminal()*

Check if the terminal supports the kitty graphics protocol

>lua
    Snacks.image.supports_terminal()
<


IMAGE:CLOSE()                              *snacks-image-module-image:close()*

>lua
    image:close()
<


IMAGE:CONVERT()                          *snacks-image-module-image:convert()*

>lua
    ---@param file string
    image:convert(file)
<


IMAGE:CREATE()                            *snacks-image-module-image:create()*

>lua
    image:create()
<


IMAGE:GRID_SIZE()                      *snacks-image-module-image:grid_size()*

>lua
    image:grid_size()
<


IMAGE:HIDE()                                *snacks-image-module-image:hide()*

>lua
    image:hide()
<


IMAGE:READY()                              *snacks-image-module-image:ready()*

>lua
    image:ready()
<


IMAGE:RENDER()                            *snacks-image-module-image:render()*

Renders the unicode placeholder grid in the buffer

>lua
    ---@param width number
    ---@param height number
    image:render(width, height)
<


IMAGE:REQUEST()                          *snacks-image-module-image:request()*

>lua
    ---@param opts table<string, string|number>|{data?: string}
    image:request(opts)
<


IMAGE:UPDATE()                            *snacks-image-module-image:update()*

>lua
    image:update()
<


IMAGE:WINS()                                *snacks-image-module-image:wins()*

>lua
    ---@return number[]
    image:wins()
<

==============================================================================
5. Links                                                  *snacks-image-links*

1. *Image*: https://github.com/user-attachments/assets/4e8a686c-bf41-4989-9d74-1641ecf2835f

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
